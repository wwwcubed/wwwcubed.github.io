"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6523],{86523:function(t,a,e){e.r(a),e.d(a,{Split:function(){return Split}});var r=e(49242),i=e(2593),s=e(64146),c=e(47454);e(13550),e(64063),e(2162),e(77191),e(54098),e(54146);let Split=class Split{static contractRoles=c.d_;get chainId(){return this._chainId}constructor(t,a,e){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,n=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new c.dw(t,a,i,r,e);this._chainId=s,this.abi=c.e.parse(i||[]),this.contractWrapper=n,this.storage=e,this.metadata=new c.ah(this.contractWrapper,c.d$,this.storage),this.app=new c.b0(this.contractWrapper,this.metadata,this.storage),this.roles=new c.ai(this.contractWrapper,Split.contractRoles),this.encoder=new c.ag(this.contractWrapper),this.estimator=new c.aQ(this.contractWrapper),this.events=new c.aR(this.contractWrapper),this.interceptor=new c.aS(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAllRecipients(){let t=[],a=i.O$.from(0),e=await this.contractWrapper.read("payeeCount",[]);for(;a.lt(e);)try{let e=await this.contractWrapper.read("payee",[a]);t.push(await this.getRecipientSplitPercentage(e)),a=a.add(1)}catch(t){if("method"in t&&t.method.toLowerCase().includes("payee(uint256)"))break;throw t}return t}async balanceOfAllRecipients(){let t=await this.getAllRecipients(),a={};for(let e of t)a[e.address]=await this.balanceOf(e.address);return a}async balanceOfTokenAllRecipients(t){let a=await (0,c.cL)(t),e=await this.getAllRecipients(),r={};for(let t of e)r[t.address]=await this.balanceOfToken(t.address,a);return r}async balanceOf(t){let a=await (0,c.cL)(t),e=await this.contractWrapper.getProvider().getBalance(this.getAddress()),r=await this.contractWrapper.read("totalReleased",[]),i=e.add(r);return this._pendingPayment(a,i,await this.contractWrapper.read("released",[a]))}async balanceOfToken(t,a){let e=await (0,c.cL)(a),i=await (0,c.cL)(t),n=new s.CH(e,r,this.contractWrapper.getProvider()),p=await n.balanceOf(this.getAddress()),o=await this.contractWrapper.read("totalReleased",[e]),d=p.add(o),h=await this._pendingPayment(i,d,await this.contractWrapper.read("released",[e,i]));return await (0,c.bc)(this.contractWrapper.getProvider(),e,h)}async getRecipientSplitPercentage(t){let a=await (0,c.cL)(t),[e,r]=await Promise.all([this.contractWrapper.read("totalShares",[]),this.contractWrapper.read("shares",[t])]);return{address:a,splitPercentage:r.mul(i.O$.from(1e7)).div(e).toNumber()/1e5}}withdraw=(0,c.dx)(async t=>c.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await (0,c.cL)(t)]}));withdrawToken=(0,c.dx)(async(t,a)=>c.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:[await (0,c.cL)(a),await (0,c.cL)(t)]}));distribute=(0,c.dx)(async()=>c.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]}));distributeToken=(0,c.dx)(async t=>c.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await (0,c.cL)(t)]}));async _pendingPayment(t,a,e){let r=a.mul(await this.contractWrapper.read("shares",[await (0,c.cL)(t)])),i=r.div(await this.contractWrapper.read("totalShares",[]));return i.sub(e)}async prepare(t,a,e){return c.aW.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:e})}async call(t,a,e){return this.contractWrapper.call(t,a,e)}}}}]);